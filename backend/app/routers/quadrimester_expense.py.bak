import glob
from fastapi import APIRouter, HTTPException
import os
import json 
from typing import Optional

from app.utils import  quadrimesterexpense_to_json

router = APIRouter()

@router.get("/quadrimester_expense/{city}")
def get_quadrimester_expense_data(city: str, year: Optional[str] = None):
    directory_root = f"./data/{city}/quadrimester_expense/"
    
    if year:
        directory_path = f"{directory_root}{year}"
        json_path = os.path.join(directory_path, "data.json")

        if os.path.exists(json_path):
            print("JSON File Already Exists! No need for further processing.")
            with open(json_path, "r", encoding="utf-8") as json_file:
                data = json.load(json_file)
            return {
                "status": 200,
                "idms": city,
                "year": year,
                "topic": "quadrimester_expense",
                "data": data
            }

        else:
            print("No JSON file found, have to process entire Excel file.")
            xlsx_files = glob.glob(os.path.join(directory_path, "*.xlsx"))
            if xlsx_files:
                excel_path = xlsx_files[0]
                try:
                    json_data = quadrimesterexpense_to_json(city=city, year=year, excel_path=excel_path)
                    return {
                        "status": 200,
                        "year": year,
                        "idms": city,
                        "topic": "quadrimester_expense",
                        "data": json_data  # Ensure json_data is parsed correctly
                    }
                except Exception as e:
                    raise HTTPException(status_code=500, detail=f"Error processing file: {str(e)}")
            else:
                raise HTTPException(status_code=404, detail="Excel file not found")

    else:
        # Return data for all years
        all_data = []
        if not os.path.exists(directory_root):
            raise HTTPException(status_code=404, detail="No quadrimester expense directory found for the specified city.")

        year_folders = [folder for folder in os.listdir(directory_root) if os.path.isdir(os.path.join(directory_root, folder))]
        for year_folder in year_folders:
            json_path = os.path.join(directory_root, year_folder, "data.json")
            if os.path.exists(json_path):
                with open(json_path, "r", encoding="utf-8") as json_file:
                    year_data = json.load(json_file)
                all_data.append({
                    "year": year_folder,
                    "data": year_data
                })
            else:
                print(f"No JSON data found for {year_folder}, attempting to process Excel file.")
                xlsx_files = glob.glob(os.path.join(directory_root, year_folder, "*.xlsx"))
                if xlsx_files:
                    excel_path = xlsx_files[0]
                    try:
                        json_data = quadrimesterexpense_to_json(city=city, year=year_folder, excel_path=excel_path)
                        all_data.append({
                            "year": year_folder,
                            "data": json_data
                        })
                    except Exception as e:
                        print(f"Failed to process Excel data for {year_folder}: {str(e)}")
                else:
                    print(f"No Excel data found for {year_folder}")

        return {
            "status": 200,
            "idms": city,
            "topic": "quadrimester_expense",
            "data": all_data
        }

# @router.get("/quadrimester_expense/{city}")
# def get_quadrimester_expense_data(city:str, year: Optional[str] = None):
#     directory_root="./data/"+city+"/quadrimester_expense/"
#     if year is not None:
#         directory_path=directory_root+year
#         json_path = directory_path+"/data.json"

#         if os.path.exists(json_path):
#             print("JSON File Already Exists! No need further processing")
#             # Open the JSON file and load its content
#             with open(json_path, "r", encoding="utf-8") as json_file:
#                 data = json.load(json_file)
            
#             return {
#                 "status":200,
#                 "idms":city,
#                 "year":year,
#                 "topic":"quadrimester_expense",
#                 "data": data
#             }
        
#         else:
#             print("No json file found, have to process entire excel file")

#             # Check if the file exists
#             # Find all .xlsx files in the given directory
#             xlsx_files = glob.glob(os.path.join(directory_root+year, "*.xlsx"))
#             # print(xlsx_files)
#             if xlsx_files:
#                 excel_path=xlsx_files[0]
#             else:
#                 raise HTTPException(status_code=404, detail="Excel file not found")
            
#             try:
#                 json_data=quadrimesterexpense_to_json(city=city, year=year, excel_path=excel_path)

#                 return {
#                     "status": 200,
#                     "year":year,
#                     "idms":city,
#                     "topic":"quadrimester_expense",
#                     "data": json_data
#                 }

#             except Exception as e:
#                 raise HTTPException(status_code=500, detail=f"Error processing file: {str(e)}")
        
#     else:
#         # Return data for all year
#         all_data = []
#         try:
#             # List all subdirectories in the root directory (representing months)
#             for year_folder in os.listdir(directory_root):
#                 # print(year_folder)
#                 directory_path = directory_root+year_folder
#                 # print(directory_path)
#                 json_path = os.path.join(directory_path, "data.json")
                
#                 if os.path.exists(json_path):
#                     # Load JSON data for each month
#                     with open(json_path, "r", encoding="utf-8") as json_file:
#                         month_data = json.load(json_file)
#                     all_data.append({
#                         "year": year_folder,
#                         "data": month_data
#                     })
#                 else:
#                     # If no JSON exists, attempt to process the Excel file
#                     # excel_path = os.path.join(directory_path, "data.xlsx")
#                     file_path = directory_root+year

#                     # Find all .xlsx files in the given directory
#                     xlsx_files = glob.glob(os.path.join(file_path, "*.xlsx"))
#                     excel_path=xlsx_files[0]

#                     if os.path.exists(excel_path):
#                         json_data = quadrimesterexpense_to_json(city=city, year=year, excel_path=excel_path)
#                         all_data.append({
#                             "month": year_folder,
#                             "data": json.loads(json_data)
#                         })
#                     else:
#                         print(f"No data found for {year_folder}")
            
#             return {
#                 "status": 200,
#                 "idms":city,
#                 "topic":"quadrimester_expense",
#                 "data": all_data
#             }
        
#         except Exception as e:
#             raise HTTPException(status_code=500, detail=f"Error processing data: {str(e)}")

@router.get("/quadrimester_expense")
def get_all_quadrimester_expense_data():
    """
    Endpoint to get quadrimester expense data for all cities and all years.
    """
    directory_root = "./data/"  # Root directory where cities are stored
    all_cities_data = []
    
    try:
        # Iterate over all city directories in the root directory
        for city_folder in os.listdir(directory_root):
            city_path = os.path.join(directory_root, city_folder, "quadrimester_expense")
            
            if os.path.isdir(city_path):  # Ensure it's a directory
                city_data = {"idms": city_folder, "years": []}
                
                # Iterate over all year directories in the city's quadrimester_expense folder
                for year_folder in os.listdir(city_path):
                    year_path = os.path.join(city_path, year_folder)
                    json_path = os.path.join(year_path, "data.json")
                    
                    if os.path.exists(json_path):
                        # Load JSON data for each year
                        with open(json_path, "r", encoding="utf-8") as json_file:
                            year_data = json.load(json_file)
                        city_data["years"].append({
                            "year": year_folder,
                            "data": year_data
                        })
                    else:
                        # If no JSON exists, attempt to process the Excel file
                        xlsx_files = glob.glob(os.path.join(year_path, "*.xlsx"))
                        if xlsx_files:
                            excel_path = xlsx_files[0]
                            json_data = quadrimesterexpense_to_json(city=city_folder, year=year_folder, excel_path=excel_path)
                            city_data["years"].append({
                                "year": year_folder,
                                "data": json.loads(json_data)
                            })
                        else:
                            print(f"No data found for {year_folder} in {city_folder}")
                
                all_cities_data.append(city_data)
        
        return {
            "status": 200,
            "topic": "quadrimester_expense",
            "data": all_cities_data
        }

    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error processing data: {str(e)}")

